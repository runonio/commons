[versions]
# 개발은 최신 버전으로 하고 배포시 버전은 따로 파일을 만들어서 관리.
lombok = "latest.release"

gson = "latest.release"
json = "latest.release"

# 1.8(jdk 8)에서는 1.2.13 으로 설정할 것
logbackClassic = "latest.release"

# 1.8(jdk 8)에서는 2.7.18 으로 설정할 것
springBootStarterWeb = "latest.release"

# 마지막 체크버전 'io.lettuce:lettuce-core:6.8.1.RELEASE'
lettuceCore = "latest.release"

# 마지막 체크버전 2.2
snakeyaml = "latest.release"

jakartaMail = "latest.release"

hikariCP = "latest.release"
postgresql = "latest.release"
mariadbJavaClient = "latest.release"
ojdbc8 = "latest.release"
ojdbc11 = "latest.release"

[libraries]
# 위에서 정의한 버전을 연결(version.ref)합니다.

lombok =  { module = "org.projectlombok:lombok", version.ref = "lombok" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
json = { module = "org.json:json", version.ref = "json" }

logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }

springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBootStarterWeb" }
lettuceCore = { module = "io.lettuce:lettuce-core", version.ref = "lettuceCore" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
jakartaMail = { module = "com.sun.mail:jakarta.mail", version.ref = "jakartaMail" }

hikariCP = { module = "com.zaxxer:HikariCP", version.ref = "hikariCP" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
mariadbJavaClient = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mariadbJavaClient" }
ojdbc8 = { module = "com.oracle.database.jdbc:ojdbc8", version.ref = "ojdbc8" }
ojdbc11 = { module = "com.oracle.database.jdbc:ojdbc11", version.ref = "ojdbc11" }